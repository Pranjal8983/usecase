name: Deploy Lambda with Docker and Terraform

on:
  push:
    branches: [ "main" ]

# env:
#   AWS_REGION: us-east-1
  # ECR_REPOSITORY: my-ecr-repo
  # IMAGE_TAG: latest
  OUTPUT_DIR: output

jobs:
  # build-and-push-docker:
  #   name: Build and Push Docker Image
  #   runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_ROLE }}
      #     aws-region: ${{ env.AWS_REGION }}

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: Build, Tag, and Push Docker image
      #   run: |
      #     docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
      #     docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

  # terraform-deploy:
  #   name: Terraform Validate and Deploy
  #   needs: build-and-push-docker
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
    #     working-directory: ./terraform

    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v4

    #   - name: Configure AWS credentials
    #     uses: aws-actions/configure-aws-credentials@v4
    #     with:
    #       role-to-assume: ${{ secrets.AWS_ROLE }}
    #       aws-region: ${{ env.AWS_REGION }}

    #   - name: Setup Terraform
    #     uses: hashicorp/setup-terraform@v3

    #   - name: Terraform Init
    #     run: terraform init

    #   - name: Terraform Validate
    #     run: terraform validate

    #   - name: Terraform Plan
    #     run: terraform plan -out=tfplan

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve tfplan

  
    opa-policy-check:
    name: OPA Policy Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod +x opa
          sudo mv opa /usr/local/bin/

      - name: Run OPA policy checks
        run: |
          mkdir -p ../${{ env.OUTPUT_DIR }}
          opa test policies/ > ../${{ env.OUTPUT_DIR }}/opa_test_report.txt || true

  terraform-test:
    name: Terraform Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Run Terraform Test
        run: |
          mkdir -p ../${{ env.OUTPUT_DIR }}
          terraform test > ../${{ env.OUTPUT_DIR }}/terraform_test_report.txt || true

  terraform-tflint:
    name: Terraform TFLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint and Save Report
        run: |
          mkdir -p ../${{ env.OUTPUT_DIR }}
          tflint --format json > ../${{ env.OUTPUT_DIR }}/tflint_report.json || true
